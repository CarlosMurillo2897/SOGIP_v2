@Styles.Render("~/Content/bootstrap-multiselect.css")
<link rel="stylesheet" href="~/Content/fontawesome-all.min.css">
<link rel="stylesheet" type="text/css" href="~/Content/DataTables/css/jquery.dataTables.css">
<link rel="stylesheet" type="text/css" href="~/Content/DataTables/css/select.dataTables.min.css">


<div class="panel panel-info">
    <div class="panel-heading">
        <h3 class="panel-title">Personalizar gráfico</h3>
    </div>

    <div class="panel-body">
        <div class="row">
            <div class="col-sm-2">
                <div class="form-group">
                    <select class="form-control" id="Grupo">
                        <option value="0">-SIN SELECCIONAR-</option>
                        <option value="1">SELECCIONES</option>
                        <option value="2">ASOCIACIONES</option>
                        <option value="3">ENTIDADES</option>
                        <option value="4">FUNCIONARIOS ICODER</option>
                        <option value="5">USUARIO ESPECÍFICO</option>
                    </select>
                </div>
            </div>

            <div hidden class="col-sm-2" id="s1">
                <div class="form-group">
                    <select class="form-control" multiple="multiple" id="Selecciones"></select>
                </div>
            </div>

            <div hidden class="col-sm-2" id="a2">
                <div class="form-group">
                    <select class="form-control" multiple="multiple" id="Asociaciones"></select>
                </div>
            </div>

            <div hidden class="col-sm-2" id="e3">
                <div class="form-group">
                    <select class="form-control" multiple="multiple" id="Entidades"></select>
                </div>
            </div>

            <div hidden class="col-sm-6" id="uss">

                <div class="form-group col-sm-7">
                    <input type="text" class="form-control" id="usuario" name="usuario" placeholder="Seleccione un usuario de la tabla." readonly />
                </div>
                <div class="form-group col-sm-2">
                    <button id="botón" type="button" class="btn btn-warning btn-block">
                        <span id="icono" class="glyphicon glyphicon-search"></span>
                    </button>
                </div>

            </div>

            <div hidden class="col-sm-2" id="month">
                <div class="form-group">
                    <select class="form-control" multiple="multiple" id="Meses">
                        <option value="1">ENERO</option>
                        <option value="2">FEBRERO</option>
                        <option value="3">MARZO</option>
                        <option value="4">ABRIL</option>
                        <option value="5">MAYO</option>
                        <option value="6">JUNIO</option>
                        <option value="7">JULIO</option>
                        <option value="8">AGOSTO</option>
                        <option value="9">SEPTIEMBRE</option>
                        <option value="10">OCTUBRE</option>
                        <option value="11">NOVIEMBRE</option>
                        <option value="12">DICIEMBRE</option>
                    </select>
                </div>
            </div>

            <div class="col-sm-2" id="bt" hidden>
                <div class="form-group">
                    <button type="button" id="b" class="btn btn-success btn-block">
                        <text id="texto">Generar Grafico </text>
                        <span id="icono" class="glyphicon glyphicon-stats"></span>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="chart-container" style="position: unset; height:90vh; width:70vw" id="graph">
    <canvas id="chart"></canvas>
</div>

<div id="myModal" class="modal fade bd-example-modal-lg" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Lista de usuarios</h4>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <table id="example" style="width: 100%;" class="table-striped">
                        <thead>
                            <tr>
                                <th>Acción</th>
                                <th>Cédula</th>
                                <th>Nombre</th>
                                <th>1° Apellido</th>
                                <th>2° Apellido</th>
                                <th>Rol</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    @Scripts.Render("~/Scripts/Chart.min.js")
    @Scripts.Render("~/Scripts/bootstrap-multiselect.js")
    @Scripts.Render("~/Scripts/bootbox.min.js")
    <script type="text/javascript" charset="utf8" src="~/Scripts/DataTables/jquery.dataTables.js"></script>
    <script type="text/javascript" charset="utf8" src="~/Scripts/DataTables/dataTables.select.min.js"></script>
}



<script>
    $(document).ready(function () {
        //_____________________________________________________________
        // La nomenclatura es la siguiente:
        // todo aquello que lleve un F se refiere a Femenno
        // todo aquello que lleve una M se refiere a Masculino
        // algunas funciones como por ejemplo  porMesF() extrae solo las mujeres de una selección, entidad...
        // si la función es porMesMFunc() se refiere a Masculino-Funcionario
        // aquellas funciones que terminen en Usuario se refiere a la extracción de un usuario específico en la consulta
        var mes = [], //id
            all = [],    //datasets
            meses = [], //nom
            allid = [], //id selecciones,entidades, asociaciones
            allnom = [], //nombre selecciones, entidades, asociaciones
            grupo = [], //sele, aso, entidad...
            extra = [];

        console.log(grupo);
        //_____________________________________________________________
        var cedu = "";
        llenarTabla();
        selecciones();
        asociaciones();
        entidades();

        ///  ________________________SELECT'S___________________________
        $('#Grupo').multiselect({
            nonSelectedText: '--GRUPOS--',
            onChange: function (option, checked, select) {
                var brands = $('#Grupo option:selected');
                $(brands).each(function (index, brand) {
                    grupo = [];
                    grupo.push([$(this).val()]);
                });

                if ($(option).val() == 1) {//selección
                    $('#a2').hide();
                    $('#e3').hide();
                    $('#s1').show();
                    $('#uss').hide();
                    $('#month').show();
                    $('#bt').show();
                }
                else if ($(option).val() == 2) {//asociación
                    $('#s1').hide();
                    $('#e3').hide();
                    $('#a2').show();
                    $('#uss').hide();
                    $('#month').show();
                    $('#bt').show();
                }
                else if ($(option).val() == 3) {//entidades
                    $('#s1').hide();
                    $('#a2').hide();
                    $('#e3').show();
                    $('#uss').hide();
                    $('#month').show();
                    $('#bt').show();
                }
                else if ($(option).val() == 4) {//otros
                    $('#s1').hide();
                    $('#a2').hide();
                    $('#e3').hide();
                    $('#uss').hide();
                    $('#month').show();
                    $('#bt').show();
                }
                else if ($(option).val() == 5) {//otros
                    $('#s1').hide();
                    $('#a2').hide();
                    $('#e3').hide();
                    $('#uss').show();
                    $('#month').show();
                    $('#bt').show();
                }

                else {
                    $('#s1').hide();
                    $('#a2').hide();
                    $('#e3').hide();
                    $('#uss').hide();
                    $('#month').hide();
                    $('#bt').hide();
                }


            }
        });
        $('#Meses').multiselect({//selecciona el id del mes y su nombre
            disableIfEmpty: true,
            enableFiltering: true,
            filterPlaceholder: 'Buscar...',
            buttonText: function (options, select) {
                return '-MESES-';
            },
            buttonTitle: function (options, select) {
                var labels = [];
                options.each(function () {
                    labels.push($(this).text());
                });
                return labels.join(' - ');
            },
            onChange: function (element, checked) {
                mes = [];
                meses = [];
                var brands = $('#Meses option:selected');
                $(brands).each(function (index, brand) {
                    mes.push([$(this).val()]);
                    meses.push([$(this).text()]);
                });

            }
        });
        //______________________________________________________________

        function selecciones() { //POPULATE SELECT OPTIONS WITH SELECCIONES
            $.ajax({
                type: "POST",
                dataType: "JSON",
                url: "/ControlIngreso/Selecciones",
                success: function (data) {
                    $.each(data, function (i, v) {
                        $('#Selecciones').append('<option value=' + v.Id + '>' + v.Nombre + '</option>');
                    });
                    $('#Selecciones').multiselect({
                        disableIfEmpty: true,
                        enableFiltering: true,
                        filterPlaceholder: 'Buscar...',
                        buttonText: function (options, select) {
                            return '-SELECCIONES-';
                        },
                        buttonTitle: function (options, select) {
                            var labels = [];
                            options.each(function () {
                                labels.push($(this).text());
                            });
                            return labels.join(' - ');
                        },
                        onChange: function (element, checked) {
                            allid = [];
                            allnom = [];
                            var brands = $('#Selecciones option:selected');
                            $(brands).each(function (index, brand) {
                                allid.push([$(this).val()]);
                                allnom.push([$(this).text()]);
                            });

                        }
                    })
                },
                error: function (error) {
                    // alert("Fallo");
                }
            })
        }

        function asociaciones() { //POPULATE SELECT OPTIONS WITH ASOCIACIONES
            $.ajax({
                type: "POST",
                dataType: "JSON",
                url: "/ControlIngreso/Asociaciones",
                success: function (data) {
                    $.each(data, function (i, v) {
                        $('#Asociaciones').append('<option value=' + v.Id + '>' + v.Nombre + '</option>');
                    });

                    $('#Asociaciones').multiselect({
                        disableIfEmpty: true,
                        enableFiltering: true,
                        filterPlaceholder: 'Buscar...',
                        buttonText: function (options, select) {
                            return '-ASOCIACIONES-';
                        },
                        buttonTitle: function (options, select) {
                            var labels = [];
                            options.each(function () {
                                labels.push($(this).text());
                            });
                            return labels.join(' - ');
                        },
                        onChange: function (element, checked) {
                            allid = [];
                            allnom = [];
                            var brands = $('#Asociaciones option:selected');
                            $(brands).each(function (index, brand) {
                                allid.push([$(this).val()]);
                                allnom.push([$(this).text()]);
                            });
                        }
                    })
                },
                error: function (error) {
                    // alert("Fallo");
                }
            })
        }

        function entidades() { //POPULATE SELECT OPTIONS WITH ENTIDADES
            $.ajax({
                type: "POST",
                dataType: "JSON",
                url: "/ControlIngreso/Entidades",
                success: function (data) {
                    $.each(data, function (i, v) {
                        $('#Entidades').append('<option value=' + v.Id + '>' + v.Nombre + '</option>');
                    });

                    $('#Entidades').multiselect({
                        disableIfEmpty: true,
                        enableFiltering: true,
                        filterPlaceholder: 'Buscar...',
                        buttonText: function (options, select) {
                            return '-ENTIDADES-';
                        },
                        buttonTitle: function (options, select) {
                            var labels = [];
                            options.each(function () {
                                labels.push($(this).text());
                            });
                            return labels.join(' - ');
                        },
                        onChange: function (element, checked) {
                            allid = [];
                            allnom = [];
                            var brands = $('#Entidades option:selected');
                            $(brands).each(function (index, brand) {
                                allid.push([$(this).val()]);
                                allnom.push([$(this).text()]);
                            });
                        }
                    })
                },
                error: function (error) {
                    // alert("Fallo");
                }
            })
        }


        $("#b").click(function () {
            all = [];

            if (grupo.length < 1 || grupo[0] == 0) {
                bootbox1(" No ha seleccionado ninguna agrupación");
                return;
            }

            else if (grupo[0] == 4) {
                if (mes.length < 1) {
                    bootbox1(" No ha seleccionado ningún mes");
                    return;
                }
                mesesFuncionarios(); //FUNCIONARIOS CARLOS
            }

            else if (grupo[0] == 5) {

                if (mes.length < 1) {
                    bootbox1(" No ha seleccionado ningún mes");
                    return;
                }
                if (cedu == "") {
                    bootbox1(" No ha seleccionado usuario");
                    return;
                }
                mesesUsuario(); //USUARIOS PARTICULARES CARLOS
            }

            else {
                if (allid.length < 1) {
                    bootbox1(" No ha seleccionado ningún Selección, Asociación o Entidad");
                    return;
                }
                if (mes.length < 1) {
                    bootbox1(" No ha seleccionado ningún mes");
                    return;
                }

                extra = allid.slice();
                console.log(extra);
                mesesAtletasA(allid); //ATLETAS CARLOS-> AQUI VARIA EN SI ES SELECCIÓN, ASOCIACIÓN O ENTIDAD
            }



        }); 



        //____________________________________________ ESTOS SON LAS FUNCIONES __________________________________
        //La función mesesAtletasA(array):
        //esta función recibe como paramétro un arreglo, ya sea que este compuesto
        //por 1 ó más selecciones, asociaciones o entidades. Solo se Itera este arreglo
        

        function mesesAtletasA(array) { //SELECCIONES, ASOCIACIONES O ENTIDADES
            if (array.length > 0) {
                porMesF(mes, array[0], grupo[0]); //-> Femenino
                porMesM(mes, array[0], grupo[0]); //-> Masculino
                array.shift(); //Esto elimina siempre la posición [0]
                mesesAtletasA(array);
            }
            else {
                allid = extra.slice();
                bootbox2(" Cargando datos");

            }
        }

        function mesesFuncionarios() { //FUNCIONARIOS

            porMesFFunc(mes); //-> Femenino
            porMesMFunc(mes); //-> Masculino
            bootbox2(" Cargando datos");
        }

        function mesesUsuario() {// USUARIO EN PARTICULAR
            porMesUs(mes, cedu);
            bootbox2(" Cargando datos");
        }

        //--------------------------------------------------Selecciones, entidades, asociaciones AJAX
        // Estas funciones se componen de lo siguiente:
        // 1) Un arreglo con los meses seleccionados
        // 2) El grupo: sea selección, entidad o asociación
        // 3) El Id de la selección, entidad o asociación.
        function porMesF(mes, grupo, idas) {
            var txt;
            $.ajax({
                type: "POST",
                dataType: "JSON",
                url: "/ControlIngreso/PorMesAtletasF",
                data: { 'mes': mes, 'aso': grupo, 'id': idas },
                success: function (data) {
                    if (idas == 1) {
                        txt = $("#Selecciones option[value=" + grupo + "]").text();
                    }
                    else if (idas == 2) {
                        txt = $("#Asociaciones option[value=" + grupo + "]").text();
                    }
                    else if (idas == 3) {
                        txt = $("#Entidades option[value=" + grupo + "]").text();
                    }


                    all.push({
                        label: txt + "-Fem",
                        data: data,
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        borderColor: 'rgba(255, 99, 132, 1)',
                        borderWidth: 1
                    });
                },
                error: function (error) {
                    bootbox1(" Error al recolectar datos");
                }
            })
        }  

        function porMesM(mes, grupo, idas) {
            var txt;
            $.ajax({
                type: "POST",
                dataType: "JSON",
                url: "/ControlIngreso/PorMesAtletasM",
                data: { 'mes': mes, 'aso': grupo, 'id': idas },
                success: function (data) {
                    if (idas == 1) {
                        txt = $("#Selecciones option[value=" + grupo + "]").text();
                    }
                    else if (idas == 2) {
                        txt = $("#Asociaciones option[value=" + grupo + "]").text();
                    }
                    else if (idas == 3) {
                        txt = $("#Entidades option[value=" + grupo + "]").text();
                    }

                    all.push({
                        label: txt + "-Masc",
                        data: data,
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: 'rgba(54, 162, 235, 0.2)',
                        borderWidth: 1
                    });
                },
                error: function (error) {
                    bootbox1(" Error al recolectar datos");
                }
            })
        }

        //----------------------------------------------Usuario específico
        //Esta funcción se compone de lo siguiente:
        // 1) Un arreglo de meses seleccionados
        // 2) La cédula del usuario
        function porMesUs(mes, cedu) {
            $.ajax({
                type: "POST",
                dataType: "JSON",
                url: "/ControlIngreso/PorMesUsuario",
                data: { 'mes': mes, 'cedu': cedu },
                success: function (data) {

                    all.push({
                        label: $('#usuario').val(),
                        data: data,
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: 'rgba(54, 162, 235, 0.2)',
                        borderWidth: 1
                    });
                },
                error: function (error) {
                    bootbox1(" Error al recolectar datos");
                }
            })
        }

        //--------------------------------------------------Funcionarios
        //Esta función solo se compone de:
        // 1) Un arreglo de meses
        function porMesFFunc(mes) {
            $.ajax({
                type: "POST",
                dataType: "JSON",
                url: "/ControlIngreso/PorMesFFunc",
                data: { 'mes': mes },
                success: function (data) {

                    all.push({
                        label: "Funcionarios ICODER-Fem",
                        data: data,
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        borderColor: 'rgba(255, 99, 132, 1)',
                        borderWidth: 1
                    });
                },
                error: function (error) {
                    bootbox1(" Error al recolectar datos");
                }
            })
        }
        function porMesMFunc(mes) {

            $.ajax({
                type: "POST",
                dataType: "JSON",
                url: "/ControlIngreso/PorMesMFunc",
                data: { 'mes': mes },
                success: function (data) {

                    all.push({
                        label: "Funcionarios ICODER-Masc",
                        data: data,
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: 'rgba(54, 162, 235, 0.2)',
                        borderWidth: 1
                    });
                },
                error: function (error) {
                    bootbox1(" Error al recolectar datos");
                }
            })
        }

        //----------------------------------------------------bootbox-----------------------------------------------------------
        function bootbox2(message) {
            var dialog = bootbox.dialog({//para cargas
                size: 'small',
                closeButton: false,
                message: '<p><i class="fa fa-spin fa-spinner"></i>' + message + '</p>'
            });
            dialog.init(function () {
                setTimeout(function () {
                    chartSe();
                }, 10000);
                setTimeout(function () {
                    dialog.modal('hide');
                }, 10000)
            });

        }
        function bootbox1(message) {//para errores
            bootbox.alert({
                size: 'small',
                closeButton: false,
                message: '<p><i class="fa fa-exclamation-triangle"></i>' + message + '</p>'
            });

        }

        //----------------------------------------------------tablilla
        $('#botón').click(function () {
            $('#myModal').modal('show');
        });

        function llenarTabla() {
            $('#example').DataTable({
                "language": {
                    "lengthMenu": "Mostrando _MENU_ resultados por página.",
                    "zeroRecords": "No se han encontrado registros.",
                    "info": "Mostrando página _PAGE_ de _PAGES_.",
                    "infoEmpty": "No hay datos para mostrar",
                    "infoFiltered": "(filtrado de _MAX_ datos obtenidos).",
                    "search": "Filtrar:",
                    "paginate": {
                        "first": "Primero",
                        "last": "Ultimo",
                        "next": "Siguiente",
                        "previous": "Anterior"
                    }
                },
                "ajax": {
                    "url": "/ControlIngreso/getUsuariosA",
                    "type": "GET",
                    "dataSrc": ""
                },
                columns: [
                    { data: "Accion" },
                    { data: "Cedula" },
                    { data: "Nombre" },
                    { data: "Apellido1" },
                    { data: "Apellido2" },
                    { data: "Rol" }
                ],
                'columnDefs': [
                    {
                        orderable: false,
                        className: 'select-checkbox',
                        targets: [0]
                    }
                ],
                'select': {
                    'style': 'os',
                    'selector': 'td:first-child'

                }
            });
        }


        $('#example').on('click', 'td.select-checkbox', function () {
            var td = $(this);
            var tr = td.closest('tr');

            $('#usuario').val(tr.find('td:eq(1)').text() + ' ' + tr.find('td:eq(2)').text() + ' ' + tr.find('td:eq(3)').text() + ' ' + tr.find('td:eq(4)').text());
            cedu = tr.find('td:eq(1)').text();
            $('#myModal').modal('hide');
        });
        //_______________________________________________ GRÁFICO ____________________________________
        function chartSe() { //-----------> GENERA EL GRÁFICO
            $('#chart').remove();
            $('#graph').append('<canvas id="chart"></canvas>');


            var ctx = document.getElementById('chart');
            var myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: meses,
                    datasets: all //----------> este es el arreglo de información, digamos [{nombre:, cantidad:....}, {nombre:, cantidad:}]
                },
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });
        }


    });
</script>

