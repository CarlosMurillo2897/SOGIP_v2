@model SOGIP_v2.Models.TipoME

@{
    ViewBag.Title = "Tipo";

}
<div class="container">

    <div class="well">
        <div class="table-responsive">
            <a class='btn btn-success pull-right' style='padding: 2px 6px; margin: 2px;' id="btnNuevo">
                <text class='hidden-xs'>Nuevo </text>
                <span style='color: white;' class='glyphicon glyphicon-plus-sign'></span>
            </a>
            <table id="tipoEjer" class="display table table-striped table-bordered table-hover " style="width:100%"> </table>

            <table id="tipoEjer2" class="display table table-striped table-bordered table-hover " style="width:100%"></table>
        </div>
    </div>
    <div class="modal fade" id="myModal">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h3 class="modal-title">Información de Usuario</h3>
                </div>
                <div class="modal-body">
                    <input type="hidden" value="original" id="hidden">
                    <form id="signupForm1">
                        <div class="form-group">
                            <label>Cédula: </label>
                            <div class="afect">
                                <input type="text" class="form-control" placeholder="Cédula" id="ced" name="ced" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-md-6">
                                <label>Primer Nombre: </label>
                                <div class="afect">
                                    <input type="text" class="form-control" placeholder="Primer Nombre" id="nom1" name="nom1" />
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                <label>Segundo Nombre: </label>
                                <div class="afect">
                                    <input type="text" class="form-control" placeholder="Segundo Nombre" id="nom2" name="nom2" />
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-6">
                                <label>Primer Apellido: </label>
                                <div class="afect">
                                    <input type="text" class="form-control" placeholder="Primer Apellido" id="apel1" name="apel1" />
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                <label>Segundo Apellido: </label>
                                <div class="afect">
                                    <input type="text" class="form-control" placeholder="Segundo Apellido" id="apel2" name="apel2" />
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-md-6">
                                <label>E-mail: </label>
                                <div class="afect">
                                    <input type="text" class="form-control" placeholder="E-mail" id="email" name="email" />
                                </div>
                            </div>
                            <div class="form-group col-md-3">
                                <label>Nacimiento: </label>
                                <div class="afect">
                                    <div class="input-group date" id="dtp">
                                        <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                        <input class="form-control" type="text" id="nac" name="nac" />
                                    </div>
                                </div>
                            </div>
                            <div class="form-group col-md-3">
                                <label>Género: </label>
                                <div class="afect">
                                    <select class="form-control" id="sexo" name="sexo">
                                        <option>Masculino</option>
                                        <option>Femenino</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Cancelar</a>
                    <input type="submit" class="btn btn-success" value="Guardar" onclick="$('#signupForm1').submit();">@* data-dismiss="modal" onclick="actualizar()"*@
                </div>
            </div>
        </div>
    </div>
</div>
</div>
@section Scripts {

    <script type="text/javascript" charset="utf8" src="~/Scripts/DataTables/jquery.dataTables.js"></script>
    <script type="text/javascript" charset="utf8" src="~/Scripts/DataTables/dataTables.select.min.js"></script>

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/custom-validator")
    @Scripts.Render("~/Scripts/bootstrap-datepicker.js")

    <script>
        var table;
        var dataSet = [];
        var table1;
        var dataSet1 = [];
        function tabla() {
            $.ajax({
                type: "POST",
                dataType: "JSON",
                url: '/TipoME/getCategorias',
                success: function (data) {
                    $.each(data, function (i, v) {
                        dataSet.push([v.nombre, v.Id, v.Id]);
                    })
                    table = $('#tipoEjer').DataTable({
                        "language": {
                            "lengthMenu": "Mostrando _MENU_ resultados por página.",
                            "zeroRecords": "No se han encontrado registros.",
                            "info": "Mostrando página _PAGE_ de _PAGES_.",
                            "infoEmpty": "No hay datos para mostrar",
                            "infoFiltered": "(filtrado de _MAX_ datos obtenidos).",
                            "search": "Filtrar:",
                            "paginate": {
                                "first": "Primero",
                                "last": "Ultimo",
                                "next": "Siguiente",
                                "previous": "Anterior"
                            }
                        },
                        data: dataSet,
                        columns: [
                            { title: "Nombre" },
                            {
                                title: "Id",
                                "visible": false,
                                "searchable": false
                            },
                            {
                                title: "Acción",
                                "render": function (Id) {
                                    return "<a class='btn btn-warning' style='padding: 2px 6px; margin: 2px;'  id='boton_" + Id + "' onclick='EditarRut(" + Id + ")'data-toggle='modal'  data-target='#editar'>" +
                                        "<text class='hidden-xs'>Editar </text>" +
                                        "<span class='glyphicon glyphicon-pencil'></span>" +
                                        "</a>" +
                                        "<a class='btn btn-primary' style='padding: 2px 6px; margin: 2px;' id='boton_" + Id + "' onclick='Enviar(" + Id + ")''>" +
                                        "<text class='hidden-xs'>Ver </text>" +
                                        "<span class='glyphicon glyphicon-list'></span>" +
                                        "</a>";
                                }
                            }
                        ],

                        'select': {
                            'style': 'os',
                            'selector': 'td:first-child'
                        }
                    });
                },

                error: function (error) {
                    alert("Fallo");
                }
            });
        }

        function tabla2(id) {
            $.ajax({
                type: "POST",
                dataType: "JSON",
                url: '/TipoME/ObtenerEjer',
                data: { 'n': id },
                success: function (data) {
                    $.each(data, function (i, v) {
                        dataSet1.push([v.nombre, v.Id, v.Id]);
                    })
                    table1 = $('#tipoEjer2').DataTable({
                        "language": {
                            "lengthMenu": "Mostrando _MENU_ resultados por página.",
                            "zeroRecords": "No se han encontrado registros.",
                            "info": "Mostrando página _PAGE_ de _PAGES_.",
                            "infoEmpty": "No hay datos para mostrar",
                            "infoFiltered": "(filtrado de _MAX_ datos obtenidos).",
                            "search": "Filtrar:",
                            "paginate": {
                                "first": "Primero",
                                "last": "Ultimo",
                                "next": "Siguiente",
                                "previous": "Anterior"
                            }
                        },
                        data: dataSet1,
                        columns: [
                            { title: "Nombres" },
                            {
                                title: "Id",
                                "visible": false,
                                "searchable": false
                            },
                            {
                                title: "Acción",
                                "render": function (Id) {
                                    return "<a class='btn btn-warning' style='padding: 2px 6px; margin: 2px;'  id='boton_" + Id + "' onclick='EditarRut(" + Id + ")'data-toggle='modal'  data-target='#editar'>" +
                                        "<text class='hidden-xs'>Editar </text>" +
                                        "<span class='glyphicon glyphicon-pencil'></span>" +
                                        "</a>" +
                                        "<a class='btn btn-primary' style='padding: 2px 6px; margin: 2px;' id='boton_" + Id + "' onclick='EnviarRut(" + Id + ")''>" +
                                        "<text class='hidden-xs'>Rutina </text>" +
                                        "<span class='glyphicon glyphicon-list'></span>" +
                                        "</a>";
                                }
                            }
                        ],

                        'select': {
                            'style': 'os',
                            'selector': 'td:first-child'
                        }
                    });
                },

                error: function (error) {
                    alert("Fallo");
                }
            });
        }

        function eliminar() {

            //$('#tipoEjer').DataTable().clear().draw();
            $('#tipoEjer').DataTable().destroy();
            $('#tipoEjer').hide();

        }

        function Enviar(id) {
            eliminar();
            tabla2(id);

        }

        $(document).ready(function () {
            tabla();
          
            $("#signupForm1").validate({
                rules: {
                    ced: {
                        required: true,
                        minlength: 9,
                        maxlength: 15,
                        remote: {
                            url: "/UsersAdmin/CedulaRepetida",
                            type: "GET",
                            data: { ced: cedula }
                        }
                    },
                    nom1: {
                        required: true,
                        minlength: 2
                    },
                    apel1: {
                        required: true,
                        minlength: 2
                    },
                    email: {
                        required: true,
                        email: true
                    },
                    sexo: {
                        required: true
                    },
                    nac: {
                        required: true
                    }
                },
                messages: {
                    ced: {
                        required: "La cédula es un campo obligatorio.",
                        minlength: "La longitud mínima de la cédula debe ser de 9 carácteres.",
                        maxlength: "La longitud máxima de la cédula es de 15 carácteres.",
                        remote: jQuery.validator.format("{0} ya se encuentra en el sistema.")
                    },
                    nom1: {
                        required: "El primer nombre es un campo requerido.",
                        minlength: "La longitud mínima del primer nombre debe ser de 2 carácteres."
                    },
                    apel1: {
                        required: "El primer apellido es un campo requerido.",
                        minlength: "La longitud mínima del primer apellido debe ser de 2 carácteres."
                    },
                    email: "Especifique su e-mail con el formato correcto.",
                    sexo: {
                        required: "El campo de género es requerido."
                    },
                    nac: "La fecha de nacimiento es obligatoria."
                },
                errorElement: "em",
                errorPlacement: function (error, element) {
                    error.addClass("help-block");
                    element.parents(".afect").addClass("has-feedback");

                    if (element.prop("id") === "nac") {
                        error.insertAfter(element.parent("div"));
                    } else {
                        error.insertAfter(element);
                    }
                    if (!element.next("span")[0]) {
                        $("<span class='glyphicon glyphicon-remove form-control-feedback'></span>").insertAfter(element);
                    }
                },
                success: function (label, element) {
                    if (!$(element).next("span")[0]) {
                        $("<span class='glyphicon glyphicon-ok form-control-feedback'></span>").insertAfter($(element));
                    }
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).parents(".afect").addClass("has-error").removeClass("has-success");
                    $(element).next("span").addClass("glyphicon-remove").removeClass("glyphicon-ok");
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).parents(".afect").addClass("has-success").removeClass("has-error");
                    $(element).next("span").addClass("glyphicon-ok").removeClass("glyphicon-remove");
                }
            });

        });

    </script>

}